syntax = "proto3";

package cart;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/KRUL-marketplace/krul_backend/internal/cart_service;cart_service";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Krul API"
    version: "1.0.0"
  };

  host: "localhost:8083",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json"
};

// Описание сервиса CartService
service CartService {
  // Добавить в корзину
  rpc Add(AddProductRequest) returns (AddProductResponse) {
    option (google.api.http) = {
      post: "/v1/cart/add",
      body: "*"
    };
  }
  // Удалить из корзины
  rpc Delete(DeleteProductRequest) returns (DeleteProductResponse) {
    option (google.api.http) = {
      post: "/v1/cart/delete",
      body: "*"
    };
  }
  // Получить корзину по ID пользователя
  rpc GetUserCart(GetUserCartRequest) returns (GetUserCartResponse) {
    option (google.api.http) = {
      get: "/v1/cart/user/{id}"
    };
  }
}

// Информация для добавления продукта в корзину
message AddProductRequest {
  string user_id = 1; // ID пользователя, который добавляет товар в корзину
  string product_id = 2; // ID продукта
  uint32 quantity = 3; // Количество товара
}

// Ответ на добавление продукта в корзину
message AddProductResponse {
  string id = 1; // ID продукта
}

// Ответ на удаление продукта из корзины
message DeleteProductResponse {
  string message = 1; // Результат операции
}

// Информация для удаления товара из корзины
message DeleteProductRequest {
  string user_id = 1; // ID пользователя, который удаляет товар из корзины
  string product_id = 2; // ID продукта
  uint32 quantity = 3; // Количество товара
}

// Инофрмация для получения корзины пользователя
message GetUserCartRequest {
  string id = 1; // ID пользователя
}

// Ответ на получение корзины пользователя
message GetUserCartResponse {
  Cart cart = 1; // Корзина
}

// Структура корзины
message Cart {
  string cart_id = 1; // ID корзины
  string user_id = 2; // ID пользователя
  repeated CartProduct products = 3; // Продукты в корзине
  google.protobuf.Timestamp created_at = 4; // Дата создания корзины
  google.protobuf.Timestamp updated_at = 5; // Дата обновления
  uint32 total_price = 6; // Итоговая цена
}

// Продукт в корзине
message CartProduct {
  string item_id = 1; // ID продукта в корзине
  string product_id = 2; // ID самого продукта
  CartProductInfo info = 3; // Информация о продукте
  uint32 quantity = 4; // Количество продукта в корзине
  google.protobuf.Timestamp created_at = 5; // Когда был добавлен
  google.protobuf.Timestamp updated_at = 6; // Когда был обновлен
}

// Информация о продукте в корзине
message CartProductInfo {
  string name = 1; // Название продукта
  string slug = 2; // Slug продукта
  string image =3; // Первое изображение продукта
  uint32 price = 4; // Цена продукта
  Brand brand = 5; // Бренд продукта
}

// Информация для удаления продукта из корзины
message DeleteProductInfo {
  string productID = 1; // ID продукта, который мы хотим удалить
  uint32 quantity = 2; // Количество удаляемого товара
}

// Бренд
message Brand {
  uint32 id = 1; // Идентификатор бренда
  BrandInfo info = 2; // Информация о бренде
  google.protobuf.Timestamp created_at = 3; // Время создания бренда
  google.protobuf.Timestamp updated_at = 4; // Время последнего обновления бренда
}


// Информация для создания нового бренда
message BrandInfo {
  string name = 1; // Наименование бренда
  string slug = 2; // Уникальный идентификатор бренда
  string description = 3; // Описание бренда
}